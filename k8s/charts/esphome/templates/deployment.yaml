apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "esphome.fullname" . }}
  labels:
    {{- include "esphome.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "esphome.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "esphome.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "esphome.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - |
                set -euo pipefail

                for src in /configmap/*.yaml; do
                  dest="/config/$(basename "$src")"
                  ln -f -s "$src" "$dest"
                done
                ln -f -s /secrets/secrets.yaml /config/secrets.yaml
                exec esphome /config dashboard
          env:
            - name: ESPHOME_DASHBOARD_USE_PING

          ports:
            - name: http
              containerPort: 6052
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: false
            - name: configmap
              mountPath: /configmap
              readOnly: true
            - name: secrets
              mountPath: /secrets
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          emptyDir: {}
        - name: configmap
          configMap:
            name: {{ include "esphome.fullname" . }}-config
        - name: secrets
          secret:
            secretName: {{ .Values.secretName }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
