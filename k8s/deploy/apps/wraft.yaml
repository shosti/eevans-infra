---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: webrtc-introducer
  name: webrtc-introducer
  namespace: eevansco
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: webrtc-introducer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webrtc-introducer
        eevans.me/public: "true"
    spec:
      containers:
      - image: gitea.eevans.me/shosti/webrtc-introducer@sha256:331b10511804c7be72ec40e253a914b033d82eed66dc32bfa91d0266449654fb
        name: webrtc-introducer
        env:
          - name: PORT
            value: "5000"
        ports:
          - name: http
            containerPort: 5000
        livenessProbe:
          tcpSocket:
            port: http
        readinessProbe:
          tcpSocket:
            port: http
        securityContext:
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
---
apiVersion: v1
kind: Service
metadata:
  name: webrtc-introducer
  namespace: eevansco
  labels:
    app.kubernetes.io/name: webrtc-introducer
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: webrtc-introducer
  ports:
    - name: http
      port: 5000
      targetPort: http
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: webrtc-introducer
  namespace: eevansco
  labels:
    app.kubernetes.io/name: webrtc-introducer
spec:
  parentRefs:
  - name: ingress-public
    namespace: ingress-public
  hostnames:
    - webrtc-introducer.eevans.co
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: webrtc-introducer
      port: 5000
---
apiVersion: objectbucket.io/v1alpha1
kind: ObjectBucketClaim
metadata:
  name: wraft
  namespace: eevansco-static
spec:
  bucketName: wraft
  storageClassName: rook-ceph-s3-public
---
apiVersion: batch/v1
kind: Job
metadata:
  name: prep-wraft-bucket
  namespace: eevansco-static
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
        - name: aws
          image: public.ecr.aws/aws-cli/aws-cli:2.15.19
          command:
            - bash
            - -c
            - |
              set -xeuo pipefail

              export AWS_ENDPOINT_URL="http://$BUCKET_HOST"
              export AWS_REGION=us-east-1
              aws s3api put-bucket-website --bucket "$BUCKET_NAME" --website-configuration file:///config/website.json
              aws s3api put-bucket-policy --bucket "$BUCKET_NAME" --policy file:///config/policy.json
          envFrom:
            - secretRef:
                name: wraft
            - configMapRef:
                name: wraft
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: true
          securityContext:
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1234
            runAsGroup: 1234
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
      volumes:
        - name: config
          configMap:
            name: s3-public-config-wraft
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: s3-public-config-wraft
  namespace: eevansco-static
data:
  policy.json: |
    {
      "Version": "2012-10-17",
      "Statement": [
        {
          "Sid": "PublicReadGetObject",
          "Effect": "Allow",
          "Principal": "*",
          "Action": [
            "s3:GetObject",
            "s3:ListBucket"
          ],
          "Resource": [
            "arn:aws:s3:::wraft/*",
            "arn:aws:s3:::wraft"
          ]
        }
      ]
    }
  website.json: |
    {
      "IndexDocument": {
        "Suffix": "index.html"
      },
      "ErrorDocument": {
        "Key": "404.html"
      }
    }
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: wraft
  namespace: rook-ceph
spec:
  parentRefs:
  - name: ingress-public
    namespace: ingress-public
  hostnames:
    - wraft0.eevans.co
    - wraft1.eevans.co
    - wraft2.eevans.co
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    filters:
      - type: URLRewrite
        urlRewrite:
          hostname: wraft.s3.eevans.co
    backendRefs:
    - name: rook-ceph-rgw-s3-public
      port: 80
