---
apiVersion: v1
kind: Service
metadata:
  name: clickhouse-keeper-metrics
  namespace: clickhouse
  labels:
    app.kubernetes.io/name: clickhouse-keeper
spec:
  ports:
    - port: 7000
      name: prometheus
  selector:
    app.kubernetes.io/name: clickhouse-keeper
---
apiVersion: v1
kind: Service
metadata:
  name: clickhouse-keeper
  namespace: clickhouse
  labels:
    app.kubernetes.io/name: clickhouse-keeper
spec:
  publishNotReadyAddresses: true
  clusterIP: None
  ports:
    - port: 2181
      name: client
    - port: 9234
      name: raft
  selector:
    app.kubernetes.io/name: clickhouse-keeper
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: clickhouse-keeper-pod-disruption-budget
  namespace: clickhouse
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse-keeper
  maxUnavailable: 1
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: clickhouse-keeper-settings
  namespace: clickhouse
data:
  keeper_config.xml: |
    <clickhouse>
        <logger>
            <level>debug</level>
            <console>true</console>
        </logger>
        <keeper_server>
            <tcp_port>2181</tcp_port>
            <server_id from_env="SERVER_ID" />
            <log_storage_path>/var/lib/clickhouse/coordination/log</log_storage_path>
            <snapshot_storage_path>/var/lib/clickhouse/coordination/snapshots</snapshot_storage_path>

            <coordination_settings>
                <operation_timeout_ms>10000</operation_timeout_ms>
                <session_timeout_ms>30000</session_timeout_ms>
                <raft_logs_level>information</raft_logs_level>
            </coordination_settings>

            <raft_configuration>
                <server>
                    <id>0</id>
                    <hostname>clickhouse-keeper-0.clickhouse-keeper.clickhouse.svc.cluster.local</hostname>
                    <port>9234</port>
                </server>
                <server>
                    <id>1</id>
                    <hostname>clickhouse-keeper-1.clickhouse-keeper.clickhouse.svc.cluster.local</hostname>
                    <port>9234</port>
                </server>
                <server>
                    <id>2</id>
                    <hostname>clickhouse-keeper-2.clickhouse-keeper.clickhouse.svc.cluster.local</hostname>
                    <port>9234</port>
                </server>
            </raft_configuration>
        </keeper_server>
        <listen_host>::</listen_host>
        <prometheus>
            <endpoint>/metrics</endpoint>
            <port>7000</port>
            <metrics>true</metrics>
            <events>true</events>
            <asynchronous_metrics>true</asynchronous_metrics>
            <status_info>true</status_info>
        </prometheus>
    </clickhouse>
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: clickhouse-keeper
  namespace: clickhouse
  labels:
    app.kubernetes.io/name: clickhouse-keeper
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse-keeper
  serviceName: clickhouse-keeper
  replicas: 3
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app.kubernetes.io/name: clickhouse-keeper
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                      - clickhouse-keeper
              topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: clickhouse-keeper-settings
          configMap:
            name: clickhouse-keeper-settings
            items:
              - key: keeper_config.xml
                path: keeper_config.xml
      containers:
        - name: clickhouse-keeper
          imagePullPolicy: IfNotPresent
          image: "clickhouse/clickhouse-keeper:23.9.5.29-alpine"
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
          env:
            - name: SERVER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
          volumeMounts:
            - name: clickhouse-keeper-settings
              mountPath: /etc/clickhouse-keeper/keeper_config.xml
              subPath: keeper_config.xml
              readOnly: true
            - name: clickhouse-keeper-datadir-volume
              mountPath: /var/lib/clickhouse
          readinessProbe:
            exec:
              command: ['/bin/bash', '-c', 'echo "ruok" | nc -w 2 localhost 2181 | grep imok']
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          livenessProbe:
            exec:
              command: ['/bin/bash', '-c', 'echo "ruok" | nc -w 2 localhost 2181 | grep imok']
            failureThreshold: 10
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          ports:
            - containerPort: 2181
              name: client
              protocol: TCP
            - containerPort: 9234
              name: quorum
              protocol: TCP
            - containerPort: 7000
              name: metrics
              protocol: TCP
      restartPolicy: Always
      schedulerName: default-scheduler
  volumeClaimTemplates:
    - metadata:
        name: clickhouse-keeper-datadir-volume
      spec:
        storageClassName: local-drive
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: clickhouse-keeper
  namespace: clickhouse
  labels:
    app.kubernetes.io/name: clickhouse-keeper
spec:
  endpoints:
    - port: metrics
      path: /metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: clickhouse-keeper
