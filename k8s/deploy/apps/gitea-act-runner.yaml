---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: act-runner
  namespace: gitea
---
apiVersion: v1
kind: Service
metadata:
  name: act-runner
  namespace: gitea
  labels:
    app.kubernetes.io/app: act-runner
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/app: act-runner
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/app: act-runner
  name: act-runner
  namespace: gitea
spec:
  replicas: 1
  serviceName: act-runner
  selector:
    matchLabels:
      app.kubernetes.io/app: act-runner
  template:
    metadata:
      labels:
        app.kubernetes.io/app: act-runner
    spec:
      restartPolicy: Always
      serviceAccountName: act-runner
      securityContext:
        fsGroup: 1000
      containers:
      - name: runner
        image: gitea/act_runner:0.2.6-dind-rootless
        imagePullPolicy: Always
        env:
        - name: CONFIG_FILE
          value: /config/config.yaml
        - name: DOCKER_HOST
          value: tcp://localhost:2376
        - name: DOCKER_CERT_PATH
          value: /certs/client
        - name: DOCKER_TLS_VERIFY
          value: "1"
        - name: GITEA_INSTANCE_URL
          value: http://gitea-http:3000
        - name: GITEA_RUNNER_REGISTRATION_TOKEN
          valueFrom:
            secretKeyRef:
              name: act-runner-secret
              key: token
        securityContext:
          privileged: true
        volumeMounts:
        - name: runner-data
          mountPath: /data
        - name: config
          mountPath: /config
      volumes:
        - name: config
          configMap:
            name: act-runner-config
  volumeClaimTemplates:
    - metadata:
        name: runner-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: act-runner-config
  namespace: gitea
  labels:
    app.kubernetes.io/app: act-runner
data:
  config.yaml: |
    log:
      level: info

    runner:
      file: .runner
      capacity: 1
      envs: {}
      timeout: 3h
      insecure: false
      fetch_timeout: 5s
      fetch_interval: 2s
      # Use medium images for builds, see https://github.com/nektos/act#runners
      labels:
        - ubuntu-latest:docker://catthehacker/ubuntu:act-latest
        - ubuntu-22.04:docker://catthehacker/ubuntu:act-22.04
        - ubuntu-20.04:docker://catthehacker/ubuntu:act-20.04
        - ubuntu-18.04:docker://catthehacker/ubuntu:act-18.04

    cache:
      # Enable cache server to use actions/cache.
      enabled: true
      # The directory to store the cache data.
      # If it's empty, the cache data will be stored in $HOME/.cache/actcache.
      dir: ""
      # The host of the cache server.
      # It's not for the address to listen, but the address to connect from job containers.
      # So 0.0.0.0 is a bad choice, leave it empty to detect automatically.
      host: ""
      # The port of the cache server.
      # 0 means to use a random available port.
      port: 0
      # The external cache server URL. Valid only when enable is true.
      # If it's specified, act_runner will use this URL as the ACTIONS_CACHE_URL rather than start a server by itself.
      # The URL should generally end with "/".
      external_server: ""

    container:
      # Specifies the network to which the container will connect.
      # Could be host, bridge or the name of a custom network.
      # If it's empty, act_runner will create a network automatically.
      network: ""
      # Whether to use privileged mode or not when launching task containers (privileged mode is required for Docker-in-Docker).
      privileged: false
      # And other options to be used when the container is started (eg, --add-host=my.gitea.url:host-gateway).
      options:
      # The parent directory of a job's working directory.
      # If it's empty, /workspace will be used.
      workdir_parent:
      # Volumes (including bind mounts) can be mounted to containers. Glob syntax is supported, see https://github.com/gobwas/glob
      # You can specify multiple volumes. If the sequence is empty, no volumes can be mounted.
      # For example, if you only allow containers to mount the `data` volume and all the json files in `/src`, you should change the config to:
      # valid_volumes:
      #   - data
      #   - /src/*.json
      # If you want to allow any volume, please use the following configuration:
      # valid_volumes:
      #   - '**'
      valid_volumes:
        - /var/run/user/*/docker.sock
      # overrides the docker client host with the specified one.
      # If it's empty, act_runner will find an available docker host automatically.
      # If it's "-", act_runner will find an available docker host automatically, but the docker host won't be mounted to the job containers and service containers.
      # If it's not empty or "-", the specified docker host will be used. An error will be returned if it doesn't work.
      docker_host: ""
      # Pull docker image(s) even if already present
      force_pull: false

    host:
      # The parent directory of a job's working directory.
      # If it's empty, $HOME/.cache/act/ will be used.
      workdir_parent:
