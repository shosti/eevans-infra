---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: etcd
  namespace: external-dns
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: etcd
  name: etcd
  namespace: external-dns
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app.kubernetes.io/name: etcd
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: etcd
  name: etcd-monitoring
  namespace: external-dns
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: etcd
  ports:
    - name: metrics
      port: 2381
      protocol: TCP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: etcd
  name: etcd
  namespace: external-dns
spec:
  serviceName: etcd
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: etcd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: etcd
      namespace: external-dns
    spec:
      serviceAccountName: etcd
      initContainers:
      - name: create-data-dir
        image: busybox:1.36.1
        command:
          - /bin/sh
          - -c
          - |
              set -eu
              mkdir -p /data/etcd
              chown 1530:1530 /data/etcd
              chmod 0700 /data/etcd
        volumeMounts:
        - mountPath: /data
          name: data
      containers:
      - command:
        - /bin/sh
        - -c
        - |
            DOMAIN="etcd.$NAMESPACE.svc.cluster.local"
            exec etcd \
              --advertise-client-urls="http://$NAME.$DOMAIN:2379" \
              --data-dir=/data/etcd \
              --enable-v2=true \
              --experimental-initial-corrupt-check=true \
              --experimental-watch-progress-notify-interval=5s \
              --initial-advertise-peer-urls="http://$SELF_IP:2380" \
              --initial-cluster=etcd-0="http://etcd-0.$DOMAIN:2380,etcd-1=http://etcd-1.$DOMAIN:2380,etcd-2=http://etcd-2.$DOMAIN:2380" \
              --listen-client-urls="http://127.0.0.1:2379,http://$SELF_IP:2379" \
              --listen-metrics-urls=http://$SELF_IP:2381 \
              --listen-peer-urls="http://$SELF_IP:2380" \
              --name="$NAME" \
              --snapshot-count=10000
        image: registry.k8s.io/etcd:3.5.12-0
        securityContext:
          runAsNonRoot: true
          runAsUser: 1530
          runAsGroup: 1530
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
              - ALL
        env:
          - name: NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SELF_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        livenessProbe:
          failureThreshold: 8
          httpGet:
            host: 127.0.0.1
            path: /health?exclude=NOSPACE&serializable=true
            port: 2381
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        name: etcd
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        startupProbe:
          failureThreshold: 24
          httpGet:
            host: 127.0.0.1
            path: /health?serializable=false
            port: 2381
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 15
        volumeMounts:
        - mountPath: /data
          name: data
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - etcd
              topologyKey: kubernetes.io/hostname
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        storageClassName: local-drive
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: etcd
  namespace: external-dns
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: etcd
  policyTypes:
    - Egress
    - Ingress
  ingress:
    # Allow client traffic within namespace
    - from:
        - podSelector: {}
      ports:
        - port: 2379
    # Allow etcd-internal traffic
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: etcd
      ports:
        - port: 2380
    # Allow monitoring traffic
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: monitoring
      ports:
        - port: 2381
  egress:
    # Allow DNS
    - to:
        - namespaceSelector: {}
          podSelector:
            matchLabels:
              k8s-app: kube-dns
      ports:
        - port: 53
          protocol: UDP
    # Allow internal traffic
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: etcd
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: etcd
  namespace: external-dns
  labels:
    app.kubernetes.io/name: etcd
spec:
  endpoints:
    - port: metrics
      path: /metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: etcd
